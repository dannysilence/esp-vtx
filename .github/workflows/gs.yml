name: C/C++ CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [armhf, arm64]
        include:
        - target: armhf
          cpu: cortex-a7
          base_image: raspios_lite:latest
        - target: arm64
          cpu: cortex-a53
          base_image: raspios_lite_arm64:latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: build 
      uses: pguyot/arm-runner-action@v2.5.2
      id: build_image
      with:
        image_additional_mb: 1024
        base_image: ${{ matrix.base_image }}
        cpu: ${{ matrix.cpu }}
        bind_mount_repository: true
        copy_repository_path: '/src/'
        copy_artifact_path: '/src/gs/gs'
        commands: |
          echo "commands to build gs"
          cd gs
          apt-get update -y
          apt install -y libdrm-dev libgbm-dev libgles2-mesa-dev libpcap-dev libturbojpeg0-dev libts-dev libsdl2-dev libfreetype6-dev 
          make -j4
    - name: Compress the release image
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
      run: |
        xz -0 -T 0 -v --files=./gs gs-${{ matrix.target }}.tar.gz
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
            - TODO
        draft: false
        prerelease: false
        
            
