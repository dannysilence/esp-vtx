name: C/C++ CI

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    
jobs:
  build:
    permissions:
      contents: write
      packages: write 
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [armhf, arm64]
        include:
        - target: armhf
          cpu: cortex-a7
          base_image: raspios_lite:latest
        - target: arm64
          cpu: cortex-a53
          base_image: raspios_lite_arm64:latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: build 
      uses: pguyot/arm-runner-action@v2.5.2
      id: build_image
      with:
        image_additional_mb: 1024
        base_image: ${{ matrix.base_image }}
        cpu: ${{ matrix.cpu }}
        bind_mount_repository: true
        copy_artifact_path: '/dst/'
        commands: |
          echo "commands to build gs"
          mkdir /dst/
          cd gs
          apt-get update -y
          apt install -y libdrm-dev libgbm-dev libgles2-mesa-dev libpcap-dev libturbojpeg0-dev libts-dev libsdl2-dev libfreetype6-dev 
          make -j4
          ls ./ -faln
          mv gs /dst/ 
          mv ../README.md /dst/
          cd /dst/
          zip gs-${{ matrix.target }}.zip gs README.md
    - name: Create Release
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
            - TODO
        draft: false
        prerelease: false
    - name: Upload Release Asset 1
      if:  github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
      id: upload-release-asset-1
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./gs-armhf.zip
        asset_name: gs-armhf.zip
        asset_content_type: application/zip
    - name: Upload Release Asset 2
      if:  github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
      id: upload-release-asset-2
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./gs-arm64.zip
        asset_name: gs-arm64.zip
        asset_content_type: application/zip        
        
            
